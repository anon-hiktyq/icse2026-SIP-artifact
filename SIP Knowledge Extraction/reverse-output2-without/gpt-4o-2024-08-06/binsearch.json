"```json\n{\n    \"c_file\": \"#if !defined(__BINSEARCH_H__)\\n#define __BINSEARCH_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid binsearchFun(void *p);\\n\\n/* 二分查找算法结构体 */\\ntypedef struct __BinSearch\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   Table *array;     /* 查找操作的目标数组 */\\n   unsigned int j;   /* 数组的上界索引 */\\n   /* 输出端口 */\\n   unsigned int *ret; /* 存储查找结果的地址 */\\n   /* 输入输出端口 */\\n   unsigned int i;   /* 数组的下界索引，作为输入输出端口 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} BinSearch;\\n\\n#endif // __BINSEARCH_H__\",\n    \"h_file\": \"#include \\\"BinSearch.h\\\"\\n\\nvoid binsearchFun(void *p)\\n{\\n    BinSearch *pIp = (BinSearch*)p;\\n    unsigned int mid;\\n\\n    while (pIp->i <= pIp->j)\\n    {\\n        mid = (pIp->i + pIp->j) / 2;\\n\\n        if (pIp->array[mid] == *pIp->ret)\\n        {\\n            *pIp->ret = mid;\\n            return;\\n        }\\n        else if (pIp->array[mid] < *pIp->ret)\\n        {\\n            pIp->i = mid + 1;\\n        }\\n        else\\n        {\\n            pIp->j = mid - 1;\\n        }\\n    }\\n    *pIp->ret = -1; // 未找到\\n    return;\\n}\"\n}\n```"