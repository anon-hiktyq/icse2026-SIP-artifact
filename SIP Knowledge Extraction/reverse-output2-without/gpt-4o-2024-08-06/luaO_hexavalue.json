"```json\n{\n  \"c_file\": \"#if !defined(__LUAO_HEXAVALUE_H__)\\n#define __LUAO_HEXAVALUE_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid luaO_hexavalueFun(void *p);\\n\\n/* 转换输入字符为十六进制值 */\\ntypedef struct __luaO_hexavalue\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   void *p;   /* 指向luaO_hexavalue结构体的指针 */\\n   /* 输出端口 */\\n   lu_byte *ret; /* 存储转换后的十六进制值 */\\n   /* 输入输出端口 */\\n   /* 状态变量 */\\n   int c; /* 输入的字符 */\\n   /* 参数变量 */\\n} luaO_hexavalue;\\n\\n#endif // __LUAO_HEXAVALUE_H__\\n\",\n  \"h_file\": \"#include \\\"luaO_hexavalue.h\\\"\\n\\nvoid luaO_hexavalueFun(void *p)\\n{\\n    luaO_hexavalue *pIp = (luaO_hexavalue*)p;\\n    int value;\\n    /* 将字符转换为十六进制值 */\\n    if (pIp->c >= '0' && pIp->c <= '9') {\\n        value = pIp->c - '0';\\n    } else if (pIp->c >= 'a' && pIp->c <= 'f') {\\n        value = pIp->c - 'a' + 10;\\n    } else if (pIp->c >= 'A' && pIp->c <= 'F') {\\n        value = pIp->c - 'A' + 10;\\n    } else {\\n        value = -1; /* 无效字符 */\\n    }\\n    *pIp->ret = (lu_byte)value;\\n    return;\\n}\"\n}\n```"