"```json\n{\n  \"c_file\": \"#if !defined(__LUAF_NEWLCLOSURE_H__)\\n#define __LUAF_NEWLCLOSURE_H__\\n\\n#include \\\"../../Lua.h\\\"\\n\\nvoid luaF_newLclosureFun(void *p);\\n\\n/* 创建Lua闭包并初始化 */\\ntypedef struct __luaF_newLclosure\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   int nupvals;   /* 闭包的上值数量 */\\n   /* 输出端口 */\\n   LClosure *c;   /* 新创建的闭包 */\\n   LClosure *ret; /* 返回的闭包 */\\n   /* 输入输出端口 */\\n   lua_State *L;  /* Lua状态 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} luaF_newLclosure;\\n\\n#endif // __LUAF_NEWLCLOSURE_H__\\n\",\n  \"h_file\": \"#include \\\"luaF_newLclosure.h\\\"\\n\\nvoid luaF_newLclosureFun(void *p)\\n{\\n    luaF_newLclosure *pIp = (luaF_newLclosure*)p;\\n    \\n    // 初始化新闭包\\n    pIp->c = luaF_newLclosure(pIp->L, pIp->nupvals);\\n    \\n    // 返回新创建的闭包\\n    pIp->ret = pIp->c;\\n    \\n    return;\\n}\\n\"\n}\n```"