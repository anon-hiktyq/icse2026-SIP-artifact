"```json\n{\n    \"c_file\": \"#if !defined(__LUAV_TONUMBER_H__)\\n#define __LUAV_TONUMBER_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid luaV_tonumber_Fun(void *p);\\n\\n/* lua对象转换为数字相关结构体 */\\ntypedef struct __luaV_tonumber\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   void *p;   /* 指向luaV_tonumber_结构体的指针 */\\n   /* 输出端口 */\\n   int *ret;  /* 指向存储转换结果的整数指针，1表示成功，0表示失败 */\\n   /* 输入输出端口 */\\n   const TValue *obj; /* 指向待转换对象的指针 */\\n   lua_Number *n;     /* 指向存储转换后数字的指针 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} luaV_tonumber;\\n\\n#endif // __LUAV_TONUMBER_H__\\n\",\n    \"h_file\": \"#include \\\"luaV_tonumber.h\\\"\\n\\nvoid luaV_tonumber_Fun(void *p)\\n{\\n    luaV_tonumber *pIp = (luaV_tonumber*)p;\\n    \\n    /* 初始化转换结果为失败 */\\n    *(pIp->ret) = 0;\\n    \\n    /* 尝试将对象转换为数字 */\\n    if (luaV_tonumber(pIp->obj, pIp->n))\\n    {\\n        /* 转换成功，设置返回值为1 */\\n        *(pIp->ret) = 1;\\n    }\\n    return;\\n}\\n\"\n}\n```"