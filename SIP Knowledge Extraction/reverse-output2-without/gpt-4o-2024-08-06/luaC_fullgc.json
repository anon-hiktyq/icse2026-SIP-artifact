"```json\n{\n  \"c_file\": \"#if !defined(__LUAC_FULLGC_H__)\\n#define __LUAC_FULLGC_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid luaC_fullgcFun(lua_State* L, int isemergency);\\n\\n/* 执行完整的垃圾回收操作 */\\ntypedef struct __LuaCFullGC\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   int isemergency;   /* 紧急状态标志 */\\n   /* 输入输出端口 */\\n   lua_State* L; /* Lua状态 */\\n   /* 状态变量 */\\n   lu_byte gcemergency; /* 垃圾回收紧急状态 */\\n   lu_byte gckind; /* 垃圾回收类型 */\\n   /* 参数变量 */\\n} LuaCFullGC;\\n\\n#endif // __LUAC_FULLGC_H__\\n\",\n  \"h_file\": \"#include \\\"LuaCFullGC.h\\\"\\n\\nvoid luaC_fullgcFun(lua_State* L, int isemergency)\\n{\\n    LuaCFullGC *pGc = (LuaCFullGC*)L;\\n    // 这里应该实现完整的垃圾回收逻辑\\n    // 例如：\\n    if (isemergency) {\\n        pGc->gcemergency = 1; // 设置紧急状态\\n    }\\n    // 根据具体的垃圾回收逻辑进行处理\\n    // ...\\n    return;\\n}\\n\"\n}\n```"