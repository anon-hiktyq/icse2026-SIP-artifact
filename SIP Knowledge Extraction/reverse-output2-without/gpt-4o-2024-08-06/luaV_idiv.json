"```json\n{\n  \"c_file\": \"#if !defined(__LUA_IDIV_FUN_H__)\\n#define __LUA_IDIV_FUN_H__\\n\\n#include \\\"lua.h\\\"\\n\\nvoid luaV_idivFun(void *p);\\n\\n/* 执行整数除法并处理特殊情况 */\\ntypedef struct __LuaIDivFun\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   lua_Integer m;   /* 被除数 */\\n   lua_Integer n;   /* 除数 */\\n   /* 输出端口 */\\n   lua_Integer *ret; /* 存储结果的指针 */\\n   /* 输入输出端口 */\\n   lua_State *L; /* Lua状态 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} LuaIDivFun;\\n\\n#endif // __LUA_IDIV_FUN_H__\\n\",\n  \"h_file\": \"#include \\\"LuaIDivFun.h\\\"\\n\\nvoid luaV_idivFun(void *p)\\n{\\n    LuaIDivFun *pIp = (LuaIDivFun*)p;\\n\\n    if (pIp->n == 0)\\n    {\\n        luaL_error(pIp->L, \\\"division by zero\\\");\\n        return;\\n    }\\n\\n    *pIp->ret = pIp->m / pIp->n;\\n\\n    return;\\n}\"\n}\n```"