"```json\n{\n  \"c_file\": \"#if !defined(__LUA_V_FLTTOINTEGER_H__)\\n#define __LUA_V_FLTTOINTEGER_H__\\n\\n#include \\\"lua.h\\\"\\n\\nvoid luaV_flttointegerFun(void *p);\\n\\n/* 浮点数到整数转换功能 */\\ntypedef struct __luaV_flttointeger\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   lua_Number n;   /* 待转换的浮点数 */\\n   F2Imod mode;   /* 舍入模式 */\\n   /* 输出端口 */\\n   int *ret; /* 转换结果存储位置 */\\n   /* 输入输出端口 */\\n   lua_Integer *p; /* 用于存储转换后的整数值 */\\n} luaV_flttointeger;\\n\\n#endif // __LUA_V_FLTTOINTEGER_H__\\n\",\n  \"h_file\": \"#include \\\"luaV_flttointeger.h\\\"\\n\\nvoid luaV_flttointegerFun(void *p)\\n{\\n    luaV_flttointeger *pIp = (luaV_flttointeger*)p;\\n    /* Conversion logic here */\\n    /* Example logic */\\n    if (pIp->mode == F2I_TRUNC) {\\n        *pIp->ret = (int)pIp->n;\\n    } else if (pIp->mode == F2I_FLOOR) {\\n        *pIp->ret = (int)floor(pIp->n);\\n    } else if (pIp->mode == F2I_CEIL) {\\n        *pIp->ret = (int)ceil(pIp->n);\\n    }\\n    *pIp->p = *pIp->ret;\\n    return;\\n}\"\n}\n```"