"```json\n{\n  \"c_file\": \"#if !defined(__LESSEQUALOTHERS_H__)\\n#define __LESSEQUALOTHERS_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid lessequalothersFun(void *p);\\n\\n/* 比较两个值是否小于或等于其他值 */\\ntypedef struct __lessequalothers\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   void *p;   /* 指向 lessequalothers 结构体的指针 */\\n   /* 输出端口 */\\n   int *ret;  /* 存储比较结果的指针 */\\n   /* 输入输出端口 */\\n   lua_State *L; /* Lua 状态 */\\n   const TValue *l; /* 左侧比较值 */\\n   const TValue *r; /* 右侧比较值 */\\n} lessequalothers;\\n\\n#endif // __LESSEQUALOTHERS_H__\\n\",\n  \"h_file\": \"#include \\\"lessequalothers.h\\\"\\n\\nvoid lessequalothersFun(void *p)\\n{\\n    lessequalothers *pIp = (lessequalothers*)p;\\n    // 比较逻辑实现\\n    // 比较 pIp->l 和 pIp->r 并将结果存储在 pIp->ret 中\\n    // 例如：\\n    // if (*pIp->l <= *pIp->r) {\\n    //     *(pIp->ret) = 1;\\n    // } else {\\n    //     *(pIp->ret) = 0;\\n    // }\\n    return;\\n}\\n\"\n}\n```"