"```json\n{\n  \"c_file\": \"#if !defined(__FILTERPC_H__)\\n#define __FILTERPC_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid filterpcFun(void *p);\\n\\n/* 判断代码是否在条件跳转内并设置寄存器值 */\\ntypedef struct __FilterPC\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   int pc;         /* 当前代码位置 */\\n   int jmptarget;  /* 跳转目标位置 */\\n   /* 输出端口 */\\n   int *ret;       /* 用于设置寄存器的值 */\\n   /* 输入输出端口 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} FilterPC;\\n\\n#endif // __FILTERPC_H__\\n\",\n  \"h_file\": \"#include \\\"FilterPC.h\\\"\\n\\nvoid filterpcFun(void *p)\\n{\\n    FilterPC *pIp = (FilterPC*)p;\\n    if (pIp->pc == pIp->jmptarget)  /* 判断是否在条件跳转内 */\\n    {\\n        *(pIp->ret) = 1;            /* 设置寄存器值为1 */\\n    }\\n    else\\n    {\\n        *(pIp->ret) = 0;            /* 设置寄存器值为0 */\\n    }\\n    return;\\n}\\n\"\n}\n```"