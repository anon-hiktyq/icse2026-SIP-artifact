"```json\n{\n  \"c_file\": \"#if !defined(__LUAM_MALLOC_H__)\\n#define __LUAM_MALLOC_H__\\n\\n#include \\\"lua.h\\\"\\n\\nvoid* luaM_malloc_Fun(lua_State *L, size_t size, int tag);\\n\\n/* 内存分配结构 */\\ntypedef struct __LuaMMalloc\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   size_t size; /* 要分配的内存块大小 */\\n   int tag;    /* 内存块标记 */\\n   /* 输出端口 */\\n   void* ret;  /* 分配的内存块指针 */\\n   /* 输入输出端口 */\\n   lua_State *L; /* Lua状态 */\\n} LuaMMalloc;\\n\\n#endif // __LUAM_MALLOC_H__\\n\",\n  \"h_file\": \"#include \\\"luaM_malloc.h\\\"\\n\\nvoid* luaM_malloc_Fun(lua_State *L, size_t size, int tag)\\n{\\n    void* block = lua_newuserdata(L, size);\\n    if (block == NULL) {\\n        luaL_error(L, \\\"memory allocation error: block too big\\\");\\n    }\\n    return block;\\n}\"\n}\n```"