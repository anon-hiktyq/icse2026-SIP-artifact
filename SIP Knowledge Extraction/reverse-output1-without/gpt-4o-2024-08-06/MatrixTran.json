"```json\n{\n    \"c_file\": \"#if !defined(__MATRIXTRAN_H__)\\n#define __MATRIXTRAN_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid MatrixTranFun(MatrixTran *p);\\n\\n/* 矩阵转置功能 */\\ntypedef struct __MatrixTran\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   const float32 *mat; /* 输入矩阵 */\\n   unint08 nrow;       /* 矩阵的行数 */\\n   unint08 ncol;       /* 矩阵的列数 */\\n   /* 输出端口 */\\n   float32 *tran;      /* 转置后的矩阵 */\\n   /* 输入输出端口 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} MatrixTran;\\n\\n#endif // __MATRIXTRAN_H__\",\n    \"h_file\": \"#include \\\"MatrixTran.h\\\"\\n\\nvoid MatrixTranFun(MatrixTran *p)\\n{\\n    const float32 *mat = p->mat;\\n    float32 *tran = p->tran;\\n    unint08 nrow = p->nrow;\\n    unint08 ncol = p->ncol;\\n\\n    for (unint08 i = 0; i < nrow; ++i)\\n    {\\n        for (unint08 j = 0; j < ncol; ++j)\\n        {\\n            tran[j * nrow + i] = mat[i * ncol + j];\\n        }\\n    }\\n    return;\\n}\"\n}\n```"