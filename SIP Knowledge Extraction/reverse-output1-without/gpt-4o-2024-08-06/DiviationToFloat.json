"```json\n{\n    \"c_file\": \"#if !defined(__DIVIATIONTOFLOAT_H__)\\n#define __DIVIATIONTOFLOAT_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid DiviationToFloatFun(DiviationToFloat *p);\\n\\n/* 将输入值与掩码进行与运算后减去偏移量，然后乘以LSB得到浮点结果 */\\ntypedef struct __DiviationToFloat\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   unint16 input;   /* 输入值 */\\n   unint16 mask;    /* 用于与运算的掩码 */\\n   unint16 offset;  /* 偏移量 */\\n   float32 LSB;     /* 用于计算的最小位 */\\n   /* 输出端口 */\\n   float32 fresult; /* 计算得到的浮点结果 */\\n   float32 *ret;    /* 指向存储结果的地址 */\\n   /* 输入输出端口 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} DiviationToFloat;\\n\\n#endif // __DIVIATIONTOFLOAT_H__\\n\",\n    \"h_file\": \"#include \\\"DiviationToFloat.h\\\"\\n\\nvoid DiviationToFloatFun(DiviationToFloat *p)\\n{\\n    p->fresult = ((p->input & p->mask) - p->offset) * p->LSB;\\n    *(p->ret) = p->fresult;\\n    return;\\n}\"\n}\n```"