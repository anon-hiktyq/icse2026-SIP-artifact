"```json\n{\n    \"c_file\": \"#if !defined(__PSEUDORATEMODULATOR_H__)\\n#define __PSEUDORATEMODULATOR_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid PseudoRateModulatorFun(void *p);\\n\\n/* 伪速率调制器功能实现 */\\ntypedef struct __PseudoRateModulator\\n{\\n   /* 输入端口 */\\n   float32 h1; /* 调制器的阈值参数 */\\n   /* 输入输出端口 */\\n   /* 调制器信号 */\\n   float32 u; /* 输入信号 */\\n   float32 r; /* 参考信号 */\\n   /* 输出端口 */\\n   float32 Yp; /* 正向输出信号 */\\n   float32 Yn; /* 负向输出信号 */\\n} PseudoRateModulator;\\n\\n#endif // __PSEUDORATEMODULATOR_H__\\n\",\n    \"h_file\": \"#include \\\"PseudoRateModulator.h\\\"\\n\\nvoid PseudoRateModulatorFun(void *p)\\n{\\n    PseudoRateModulator *pModulator = (PseudoRateModulator*)p;\\n\\n    if ((pModulator->u - pModulator->r) > pModulator->h1)\\n    {\\n        pModulator->Yp = pModulator->u - pModulator->r;\\n        pModulator->Yn = 0;\\n    }\\n    else if ((pModulator->r - pModulator->u) > pModulator->h1)\\n    {\\n        pModulator->Yn = pModulator->r - pModulator->u;\\n        pModulator->Yp = 0;\\n    }\\n    else\\n    {\\n        pModulator->Yp = 0;\\n        pModulator->Yn = 0;\\n    }\\n\\n    pModulator->r = pModulator->u; /* 更新参考信号 */\\n\\n    return;\\n}\\n\"\n}\n```"