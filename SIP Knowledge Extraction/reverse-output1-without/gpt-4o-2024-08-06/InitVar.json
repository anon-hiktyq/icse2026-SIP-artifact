"```json\n{\n  \"c_file\": \"#if !defined(__INITVAR_H__)\\n#define __INITVAR_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid InitVarFun(void *p);\\n\\n/* 初始化变量 */\\ntypedef struct __InitVar\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   InitVar *p;   /* 指向InitVar结构体的指针 */\\n   /* 输出端口 */\\n   unint08 countInt32ms;   /* 计数器，32ms间隔 */\\n   unint32 countSate;      /* 状态计数 */\\n   unint32 countPublic;    /* 公共计数 */\\n   unint32 countMode;      /* 模式计数 */\\n   unint16 flgPRSAM;       /* PRSAM标志 */\\n   unint08 flgGryoCalc;    /* Gryo计算标志 */\\n   unint16 flg160INT;      /* 160INT标志 */\\n   SGyroData mGyroData;    /* 陀螺仪数据 */\\n   SFratemodulator mModulator[3]; /* 调制器数组 */\\n   SThrDistribute mThrDistribute; /* 推力分配 */\\n   SFWarning mFWarning;    /* 警告信息 */\\n} InitVar;\\n\\n#endif // __INITVAR_H__\\n\",\n  \"h_file\": \"#include \\\"InitVar.h\\\"\\n\\nvoid InitVarFun(void *p)\\n{\\n    InitVar *pIp = (InitVar*)p;\\n    // 初始化所有输出变量\\n    pIp->countInt32ms = 0;\\n    pIp->countSate = 0;\\n    pIp->countPublic = 0;\\n    pIp->countMode = 0;\\n    pIp->flgPRSAM = 0;\\n    pIp->flgGryoCalc = 0;\\n    pIp->flg160INT = 0;\\n    // 初始化结构体\\n    // 这里假设有一些初始化函数可以使用，例如：\\n    InitSGyroData(&pIp->mGyroData);\\n    InitSFratemodulator(pIp->mModulator);\\n    InitSThrDistribute(&pIp->mThrDistribute);\\n    InitSFWarning(&pIp->mFWarning);\\n    return;\\n}\"\n}\n```"