"```json\n{\n  \"c_file\": \"#if !defined(__MATRIXINV33F_H__)\\n#define __MATRIXINV33F_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid MatrixInv33FFun(void *p);\\n\\n/* 计算3x3矩阵的逆矩阵 */\\ntypedef struct __MatrixInv33F\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   const float32 *src; /* 输入的3x3矩阵 */\\n   /* 输出端口 */\\n   unint08 bAbleInv;  /* 是否可逆的标志 */\\n   unint08 *ret;      /* 返回是否可逆的标志 */\\n   /* 输入输出端口 */\\n   float32 *inv;      /* 输出的3x3逆矩阵 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} MatrixInv33F;\\n\\n#endif // __MATRIXINV33F_H__\\n\",\n  \"h_file\": \"#include \\\"MatrixInv33F.h\\\"\\n\\nvoid MatrixInv33FFun(void *p)\\n{\\n    MatrixInv33F *pIp = (MatrixInv33F*)p;\\n    /* 这里实现矩阵求逆的具体逻辑 */\\n    \\n    /* 检查矩阵是否可逆，并设置bAbleInv和ret标志 */\\n    \\n    return;\\n}\"\n}\n```"