"```json\n{\n  \"c_file\": \"#if !defined(__APPINIT_H__)\\n#define __APPINIT_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid AppInitFun(AppInit *p);\\n\\n/* 初始化应用程序的相关结构 */\\ntypedef struct __AppInit\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输出端口 */\\n   unint08 countInt32ms; /* 用于计数的32毫秒整数 */\\n   unint32 countSate;    /* 用于计数的状态 */\\n   unint32 countPublic;  /* 公共计数 */\\n   unint32 countMode;    /* 模式计数 */\\n   unint16 flgPRSAM;    /* PRSAM标志 */\\n   unint08 flgGryoCalc; /* 陀螺计算标志 */\\n   unint16 flg160INT;   /* 160INT标志 */\\n   SGyroData mGyroData; /* 陀螺数据 */\\n   SFratemodulator mModulator[3]; /* 速率调制器 */\\n   SThrDistribute mThrDistribute; /* 推力分配 */\\n   SFWarning mFWarning; /* 警告信息 */\\n} AppInit;\\n\\n#endif // __APPINIT_H__\\n\",\n  \"h_file\": \"#include \\\"AppInit.h\\\"\\n\\nvoid AppInitFun(AppInit *p)\\n{\\n    AppInit *pIp = (AppInit*)p;\\n    \\n    /* 初始化计数变量 */\\n    pIp->countInt32ms = 0;\\n    pIp->countSate = 0;\\n    pIp->countPublic = 0;\\n    pIp->countMode = 0;\\n    \\n    /* 初始化标志变量 */\\n    pIp->flgPRSAM = 0;\\n    pIp->flgGryoCalc = 0;\\n    pIp->flg160INT = 0;\\n    \\n    /* 初始化结构体变量 */\\n    memset(&pIp->mGyroData, 0, sizeof(SGyroData));\\n    memset(&pIp->mModulator, 0, sizeof(SFratemodulator) * 3);\\n    memset(&pIp->mThrDistribute, 0, sizeof(SThrDistribute));\\n    memset(&pIp->mFWarning, 0, sizeof(SFWarning));\\n    \\n    /* 设备控制初始化代码可在此添加 */\\n    \\n    return;\\n}\\n\"\n}\n```"