"```json\n{\n  \"c_file\": \"#if !defined(__TRIPLEFABSMAX_H__)\\n#define __TRIPLEFABSMAX_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid TripleFabsMaxFun(void *p);\\n\\n/* 计算三个浮点数的绝对值并返回最大值 */\\ntypedef struct __TripleFabsMax\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   float32 fx1;   /* 第一个浮点输入值 */\\n   float32 fy2;   /* 第二个浮点输入值 */\\n   float32 fz3;   /* 第三个浮点输入值 */\\n   /* 输出端口 */\\n   float32 tmax;  /* 三个浮点数绝对值中的最大值 */\\n   float32 *ret;  /* 指向存储最大值的指针 */\\n   /* 输入输出端口 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} TripleFabsMax;\\n\\n#endif // __TRIPLEFABSMAX_H__\",\n  \"h_file\": \"#include \\\"TripleFabsMax.h\\\"\\n\\nvoid TripleFabsMaxFun(void *p)\\n{\\n    TripleFabsMax *pIp = (TripleFabsMax*)p;\\n    float32 absFx1 = fabs(pIp->fx1);\\n    float32 absFy2 = fabs(pIp->fy2);\\n    float32 absFz3 = fabs(pIp->fz3);\\n\\n    pIp->tmax = absFx1;\\n    if (absFy2 > pIp->tmax)\\n    {\\n        pIp->tmax = absFy2;\\n    }\\n    if (absFz3 > pIp->tmax)\\n    {\\n        pIp->tmax = absFz3;\\n    }\\n\\n    if (pIp->ret != NULL)\\n    {\\n        *(pIp->ret) = pIp->tmax;\\n    }\\n\\n    return;\\n}\"\n}\n```"