"```json\n{\n  \"c_file\": \"#if !defined(__LUAG_GETFUNCLINE_H__)\\n#define __LUAG_GETFUNCLINE_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid luaG_getfunclineFun(void *p);\\n\\n/* 获取给定指令的源代码行号 */\\ntypedef struct __luaG_getfuncline\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   const Proto* f; /* 函数原型信息指针，包含调试信息 */\\n   int pc;         /* 程序计数器，指示当前指令的位置 */\\n   /* 输出端口 */\\n   int* ret;       /* 返回的行号，如果没有调试信息则为 -1 */\\n   /* 输入输出端口 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} luaG_getfuncline;\\n\\n#endif // __LUAG_GETFUNCLINE_H__\\n\",\n  \"h_file\": \"#include \\\"luaG_getfuncline.h\\\"\\n\\nvoid luaG_getfunclineFun(void *p)\\n{\\n    luaG_getfuncline *pIp = (luaG_getfuncline*)p;\\n\\n    if (pIp->f != NULL && pIp->f->lineinfo != NULL) {\\n        /* 获取行号 */\\n        *pIp->ret = pIp->f->lineinfo[pIp->pc];\\n    } else {\\n        /* 没有调试信息，返回 -1 */\\n        *pIp->ret = -1;\\n    }\\n    return;\\n}\\n\"\n}\n```"