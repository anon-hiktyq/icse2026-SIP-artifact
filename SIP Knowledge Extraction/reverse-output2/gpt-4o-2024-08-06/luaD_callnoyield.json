"```json\n{\n  \"c_file\": \"#if !defined(__LUAD_CALLNOYIELD_H__)\\n#define __LUAD_CALLNOYIELD_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid luaD_callnoyieldFun(void *p);\\n\\n/* 调用不可中断的Lua函数 */\\ntypedef struct __LuaD_CallNoYield\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   int nResults; /* 函数调用后需要的结果数量 */\\n   /* 输出端口 */\\n   /* 输入输出端口 */\\n   lua_State *L; /* Lua状态机指针 */\\n   StkId func;   /* 调用的函数在栈中的位置 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} LuaD_CallNoYield;\\n\\n#endif // __LUAD_CALLNOYIELD_H__\\n\",\n  \"h_file\": \"#include \\\"LuaD_CallNoYield.h\\\"\\n\\nvoid luaD_callnoyieldFun(void *p)\\n{\\n    LuaD_CallNoYield *pIp = (LuaD_CallNoYield*)p;\\n    \\n    /* 调用不可中断的Lua函数 */\\n    IPCALL(pIp->L, pIp->func, pIp->nResults);\\n    \\n    return;\\n}\"\n}\n```"