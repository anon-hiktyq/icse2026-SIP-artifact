"```json\n{\n  \"c_file\": \"#if !defined(__NEWCHECKEDKEY_H__)\\n#define __NEWCHECKEDKEY_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid newcheckedkeyFun(void *p);\\n\\n/* 检查键并插入或设置值 */\\ntypedef struct __NewCheckedKey\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入输出端口 */\\n   Table *t;           /* 要操作的表 */\\n   const TValue *key; /* 要检查或插入的键 */\\n   TValue *value;     /* 要设置的值 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} NewCheckedKey;\\n\\n#endif // __NEWCHECKEDKEY_H__\\n\",\n  \"h_file\": \"#include \\\"NewCheckedKey.h\\\"\\n\\nvoid newcheckedkeyFun(void *p)\\n{\\n    NewCheckedKey *pIp = (NewCheckedKey*)p;\\n\\n    // 检查键是否在表的数组部分\\n    int isInArray = checkKeyInArray(pIp->t, pIp->key);\\n\\n    if (isInArray) {\\n        // 如果在数组部分，设置其值\\n        setValueInArray(pIp->t, pIp->key, pIp->value);\\n    } else {\\n        // 如果不在数组部分，将其插入到哈希部分\\n        insertKeyInHash(pIp->t, pIp->key, pIp->value);\\n    }\\n\\n    return;\\n}\\n\"\n}\n```"