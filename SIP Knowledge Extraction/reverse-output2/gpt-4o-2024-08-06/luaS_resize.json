"```json\n{\n  \"c_file\": \"#if !defined(__LUAS_RESIZE_H__)\\n#define __LUAS_RESIZE_H__\\n\\n#include \\\"../../Lua.h\\\"\\n\\nvoid luaS_resizeFun(void *p);\\n\\n/* 调整 Lua 字符串表的大小 */\\ntypedef struct __luaS_resize\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   int nsize;   /* 新的字符串表大小 */\\n   /* 输入输出端口 */\\n   lua_State *L; /* Lua 状态机指针 */\\n   /* 状态变量 */\\n   stringtable strt; /* Lua 中的字符串哈希表 */\\n} luaS_resize;\\n\\n#endif // __LUAS_RESIZE_H__\\n\",\n  \"h_file\": \"#include \\\"luaS_resize.h\\\"\\n\\nvoid luaS_resizeFun(void *p)\\n{\\n    luaS_resize *pLua = (luaS_resize*)p;\\n    \\n    if (pLua->L->strt.size != pLua->nsize) /* 如果字符串表大小发生变化 */\\n    {\\n        rehashStringTable(pLua->L, pLua->nsize); /* 根据新大小重新散列字符串表 */\\n    }\\n    return;\\n}\"\n}\n```"