"```json\n{\n  \"c_file\": \"#if !defined(__LUAT_GETTMBYOBJ_H__)\\n#define __LUAT_GETTMBYOBJ_H__\\n\\n#include \\\"lua.h\\\"\\n\\nvoid luaT_gettmbyobjFun(void *p);\\n\\n/* Retrieve tag method based on object type */\\ntypedef struct __luaT_gettmbyobj\\n{\\n   /* Interface function */\\n   Fun fun;\\n   /* Input port */\\n   TMS event;           /* The event for which the tag method is being retrieved */\\n   /* Output port */\\n   const TValue *ret;  /* Pointer to the tag method retrieved, or nil if no metatable is present */\\n   /* Input-output port */\\n   lua_State *L;       /* Pointer to the Lua state */\\n   const TValue *o;    /* Pointer to the object for which the tag method is being retrieved */\\n   /* State variables */\\n   /* Parameter variables */\\n} luaT_gettmbyobj;\\n\\n#endif // __LUAT_GETTMBYOBJ_H__\\n\",\n  \"h_file\": \"#include \\\"luaT_gettmbyobj.h\\\"\\n\\nvoid luaT_gettmbyobjFun(void *p)\\n{\\n    luaT_gettmbyobj *pIp = (luaT_gettmbyobj*)p;\\n    const TValue *tm;\\n    Table *mt = pIp->o->tt == LUA_TTABLE ? hvalue(pIp->o) : NULL;\\n    if (mt)\\n    {\\n        tm = luaH_getshortstr(mt, pIp->event);\\n        pIp->ret = tm != luaO_nilobject ? tm : NULL;\\n    }\\n    else\\n    {\\n        pIp->ret = NULL;\\n    }\\n    return;\\n}\\n\"\n}\n```"