"```json\n{\n  \"c_file\": \"#if !defined(__LUAT_GETTMFUN_H__)\\n#define __LUAT_GETTMFUN_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid luaT_gettmFun(void *p);\\n\\n/* 获取tag method相关信息 */\\ntypedef struct __LuaT_GettmFun\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   TMS event;   /* 需要获取的tag method的事件类型 */\\n   /* 输出端口 */\\n   const TValue *ret; /* 获取到的tag method，如果没有找到则为NULL */\\n   /* 输入输出端口 */\\n   Table *events; /* 存储tag methods的表 */\\n   TString *ename; /* 事件名称字符串 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} LuaT_GettmFun;\\n\\n#endif // __LUAT_GETTMFUN_H__\\n\",\n  \"h_file\": \"#include \\\"LuaT_GettmFun.h\\\"\\n\\nvoid luaT_gettmFun(void *p)\\n{\\n    LuaT_GettmFun *pIp = (LuaT_GettmFun*)p;\\n    /* 获取tag method并缓存结果 */\\n    pIp->ret = luaT_gettagmethod(pIp->events, pIp->event, pIp->ename);\\n    if (pIp->ret == NULL) {\\n        /* 如果没有找到tag method，缓存结果为NULL */\\n        pIp->ret = NULL;\\n    }\\n    return;\\n}\"\n}\n```"