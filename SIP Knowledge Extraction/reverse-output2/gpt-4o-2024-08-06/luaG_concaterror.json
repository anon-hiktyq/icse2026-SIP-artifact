"```json\n{\n  \"c_file\": \"#if !defined(__LUAG_CONCATERROR_H__)\\n#define __LUAG_CONCATERROR_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid luaG_concaterrorFun(void *p);\\n\\n/* 处理字符串连接错误 */\\ntypedef struct __luaG_concaterror\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   lua_State *L;       /* Lua状态机指针 */\\n   const TValue *p1;   /* 第一个操作数 */\\n   const TValue *p2;   /* 第二个操作数 */\\n   /* 输出端口 */\\n   /* 输入输出端口 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} luaG_concaterror;\\n\\n#endif // __LUAG_CONCATERROR_H__\\n\",\n  \"h_file\": \"#include \\\"luaG_concaterror.h\\\"\\n\\nvoid luaG_concaterrorFun(void *p)\\n{\\n    luaG_concaterror *pIp = (luaG_concaterror*)p;\\n    \\n    if (!ttisstring(pIp->p1) && !cvt2str(pIp->p1)) /* 如果第一个操作数不是字符串或不能转换为字符串 */\\n    {\\n        luaG_typeerror(pIp->L, pIp->p1, \\\"concatenate\\\"); /* 调用错误处理函数 */\\n    }\\n    return;\\n}\"\n}\n```"