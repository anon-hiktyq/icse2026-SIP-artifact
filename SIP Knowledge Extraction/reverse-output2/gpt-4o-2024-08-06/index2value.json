"```json\n{\n  \"c_file\": \"#if !defined(__INDEX2VALUE_H__)\\n#define __INDEX2VALUE_H__\\n\\n#include \\\"lua.h\\\"\\n\\nvoid index2valueFun(void *p);\\n\\n/* 索引转换为值的函数 */\\ntypedef struct __Index2Value\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   lua_State *L; /* Lua状态机指针 */\\n   int idx;     /* 要查找的索引值 */\\n   /* 输出端口 */\\n   TValue *ret; /* 对应索引的值指针 */\\n   /* 输入输出端口 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} Index2Value;\\n\\n#endif // __INDEX2VALUE_H__\\n\",\n  \"h_file\": \"#include \\\"Index2Value.h\\\"\\n\\nvoid index2valueFun(void *p)\\n{\\n    Index2Value *pIp = (Index2Value*)p;\\n    int validIndex = lua_gettop(pIp->L) >= abs(pIp->idx) ? 1 : 0;\\n    if (validIndex)\\n    {\\n        lua_pushvalue(pIp->L, pIp->idx);\\n        pIp->ret = lua_tovalue(pIp->L, -1);\\n        lua_pop(pIp->L, 1);\\n    }\\n    else\\n    {\\n        pIp->ret = NULL; // 返回nil\\n    }\\n    return;\\n}\\n\"\n}\n```"