"```json\n{\n  \"c_file\": \"#if !defined(__LUAV_IDIV_H__)\\n#define __LUAV_IDIV_H__\\n\\n#include \\\"../../lua.h\\\"\\n\\nvoid luaV_idivFun(void *p);\\n\\n/* 执行整数除法操作 */\\ntypedef struct __luaV_idiv\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   lua_Integer m;   /* 被除数 */\\n   lua_Integer n;   /* 除数 */\\n   /* 输出端口 */\\n   lua_Integer *ret; /* 结果指针，存储除法结果 */\\n   /* 输入输出端口 */\\n   lua_State *L; /* Lua 状态 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} luaV_idiv;\\n\\n#endif // __LUAV_IDIV_H__\\n\",\n  \"h_file\": \"#include \\\"luaV_idiv.h\\\"\\n\\nvoid luaV_idivFun(void *p)\\n{\\n    luaV_idiv *pIp = (luaV_idiv*)p;\\n    if (pIp->n == 0) {\\n        lua_pushstring(pIp->L, \\\"division by zero\\\");\\n        lua_error(pIp->L);\\n    } else {\\n        *pIp->ret = pIp->m / pIp->n;\\n        if ((pIp->m % pIp->n != 0) && ((pIp->m < 0) != (pIp->n < 0))) {\\n            (*pIp->ret)--;\\n        }\\n    }\\n    return;\\n}\"\n}\n```"