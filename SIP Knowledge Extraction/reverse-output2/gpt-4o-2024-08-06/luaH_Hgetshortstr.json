"```json\n{\n  \"c_file\": \"#if !defined(__LUAH_HGETSHORTSTR_H__)\\n#define __LUAH_HGETSHORTSTR_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid luaH_HgetshortstrFun(void *p);\\n\\n/* Searches for a short string key in a hash table */\\ntypedef struct __luaH_Hgetshortstr\\n{\\n   /* Interface function */\\n   Fun fun;\\n   /* Input ports */\\n   Table *t;          /* Pointer to the hash table where the search is performed */\\n   TString *key;      /* Pointer to the short string key being searched in the hash table */\\n   /* Output ports */\\n   const TValue *ret; /* Pointer to the value associated with the key, or a default 'absentkey' if not found */\\n   /* Input-output ports */\\n   /* State variables */\\n   /* Parameter variables */\\n} luaH_Hgetshortstr;\\n\\n#endif // __LUAH_HGETSHORTSTR_H__\",\n  \"h_file\": \"#include \\\"luaH_Hgetshortstr.h\\\"\\n\\nvoid luaH_HgetshortstrFun(void *p)\\n{\\n    luaH_Hgetshortstr *pIp = (luaH_Hgetshortstr*)p;\\n    /* Implement the logic to search for the key in the hash table */\\n    /* If the key is found, set pIp->ret to the associated value */\\n    /* If the key is not found, set pIp->ret to the default 'absentkey' */\\n    return;\\n}\"\n}\n```"