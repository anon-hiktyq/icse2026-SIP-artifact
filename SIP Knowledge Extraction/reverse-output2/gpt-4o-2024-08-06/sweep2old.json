"```json\n{\n  \"c_file\": \"#if !defined(__SWEEP2OLD_H__)\\n#define __SWEEP2OLD_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid sweep2oldFun(void *p);\\n\\n/* Process a linked list of garbage collectible objects */\\ntypedef struct __Sweep2Old\\n{\\n   /* Interface function */\\n   Fun fun;\\n   /* Input/Output interfaces */\\n   lua_State *L; /* The Lua state, used for accessing the global state and other thread-specific data */\\n   GCObject **p; /* Pointer to the current position in the list of garbage collectible objects */\\n} Sweep2Old;\\n\\n#endif // __SWEEP2OLD_H__\\n\",\n  \"h_file\": \"#include \\\"Sweep2Old.h\\\"\\n\\nvoid sweep2oldFun(void *p)\\n{\\n    Sweep2Old *pIp = (Sweep2Old*)p;\\n    GCObject **current = pIp->p;\\n\\n    while (*current != NULL) {\\n        if (isDead(*current)) {\\n            /* Remove dead object from the list */\\n            *current = (*current)->next;\\n        } else {\\n            /* Mark surviving object as old */\\n            markOld(*current);\\n            /* Special handling for threads and upvalues */\\n            if (isThread(*current)) {\\n                handleThread(*current, pIp->L);\\n            } else if (isUpvalue(*current)) {\\n                handleUpvalue(*current, pIp->L);\\n            }\\n            current = &(*current)->next;\\n        }\\n    }\\n    return;\\n}\\n\"\n}\n```"