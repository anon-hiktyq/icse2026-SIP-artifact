"```json\n{\n  \"c_file\": \"#if !defined(__LUAHSIZE_H__)\\n#define __LUAHSIZE_H__\\n\\n#include \\\"../../Lua.h\\\"\\n\\nvoid luaH_sizeFun(void *p);\\n\\n/* 计算 Lua 表的大小 */\\ntypedef struct __LuaHSize\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   Table *t;   /* 指向需要计算大小的 Lua 表 */\\n   /* 输出端口 */\\n   lu_mem sz; /* 计算出的 Lua 表的总大小 */\\n   lu_mem *ret; /* 存储计算结果的指针 */\\n   /* 输入输出端口 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} LuaHSize;\\n\\n#endif // __LUAHSIZE_H__\\n\",\n  \"h_file\": \"#include \\\"LuaHSize.h\\\"\\n\\nvoid luaH_sizeFun(void *p)\\n{\\n    LuaHSize *pIp = (LuaHSize*)p;\\n\\n    /* 假设存在一个函数计算 Lua 表的大小，示例代码如下 */\\n    pIp->sz = luaH_calculateSize(pIp->t);\\n\\n    if (pIp->ret != NULL) {\\n        *(pIp->ret) = pIp->sz;\\n    }\\n\\n    return;\\n}\\n\"\n}\n```"