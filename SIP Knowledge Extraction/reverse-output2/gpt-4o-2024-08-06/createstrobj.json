"```json\n{\n  \"c_file\": \"#if !defined(__CREATESTROBJ_H__)\\n#define __CREATESTROBJ_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid createstrobjFun(void *p);\\n\\n/* 创建字符串对象并初始化其属性 */\\ntypedef struct __CreateStrObj\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   size_t totalsize;   /* 字符串对象的总大小 */\\n   lu_byte tag;        /* 字符串对象的标签 */\\n   unsigned int h;     /* 字符串对象的哈希值 */\\n   /* 输出端口 */\\n   TString *ts;        /* 创建的字符串对象指针 */\\n   TString *ret;       /* 返回的字符串对象指针 */\\n   /* 输入输出端口 */\\n   lua_State *L;       /* Lua状态机指针 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} CreateStrObj;\\n\\n#endif // __CREATESTROBJ_H__\\n\",\n  \"h_file\": \"#include \\\"CreateStrObj.h\\\"\\n\\nvoid createstrobjFun(void *p)\\n{\\n    CreateStrObj *pObj = (CreateStrObj*)p;\\n    \\n    /* 初始化字符串对象并设置属性 */\\n    pObj->ts = (TString*)malloc(pObj->totalsize);\\n    if (pObj->ts != NULL) {\\n        pObj->ts->tag = pObj->tag;\\n        pObj->ts->h = pObj->h;\\n        pObj->ret = pObj->ts;  /* 返回创建的字符串对象指针 */\\n    } else {\\n        pObj->ret = NULL;  /* 处理内存分配失败的情况 */\\n    }\\n    \\n    return;\\n}\\n\"\n}\n```"