"```json\n{\n  \"c_file\": \"#if !defined(__LUAG_OPINTERROR_H__)\\n#define __LUAG_OPINTERROR_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid luaG_opinterrorFun(void *p);\\n\\n/* 检查操作数是否为数字类型并进行错误处理 */\\ntypedef struct __LuaGOpinterror\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   lua_State* L;         /* Lua状态机的指针 */\\n   const TValue* p1;     /* 第一个操作数 */\\n   const TValue* p2;     /* 第二个操作数 */\\n   const char* msg;      /* 错误信息字符串 */\\n   /* 输出端口 */\\n   /* 输入输出端口 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} LuaGOpinterror;\\n\\n#endif // __LUAG_OPINTERROR_H__\\n\",\n  \"h_file\": \"#include \\\"LuaGOpinterror.h\\\"\\n\\nvoid luaG_opinterrorFun(void *p)\\n{\\n    LuaGOpinterror *pIp = (LuaGOpinterror*)p;\\n    if (!isnumber(pIp->p1))  /* 检查第一个操作数是否为数字类型 */\\n    {\\n        pIp->p2 = pIp->p1;  /* 将第二个操作数设置为第一个操作数 */\\n        luaG_typeerror(pIp->L, pIp->p2, pIp->msg);  /* 调用类型错误处理函数 */\\n    }\\n    return;\\n}\\n\"\n}\n```"