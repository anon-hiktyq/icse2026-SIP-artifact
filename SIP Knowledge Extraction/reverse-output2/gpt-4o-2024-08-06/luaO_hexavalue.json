"```json\n{\n  \"c_file\": \"#if !defined(__LUAO_HEXAVALUE_H__)\\n#define __LUAO_HEXAVALUE_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid luaO_hexavalueFun(void *p);\\n\\n/* 计算字符c的十六进制值 */\\ntypedef struct __LuaO_Hexavalue\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   int c;   /* 待计算十六进制值的字符 */\\n   /* 输出端口 */\\n   lu_byte *ret; /* 计算得到的十六进制值 */\\n   /* 输入输出端口 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} LuaO_Hexavalue;\\n\\n#endif // __LUAO_HEXAVALUE_H__\\n\",\n  \"h_file\": \"#include \\\"LuaO_Hexavalue.h\\\"\\n\\nvoid luaO_hexavalueFun(void *p)\\n{\\n    LuaO_Hexavalue *pIp = (LuaO_Hexavalue*)p;\\n    if ('0' <= pIp->c && pIp->c <= '9') {\\n        *(pIp->ret) = pIp->c - '0';\\n    } else if ('a' <= pIp->c && pIp->c <= 'f') {\\n        *(pIp->ret) = pIp->c - 'a' + 10;\\n    } else if ('A' <= pIp->c && pIp->c <= 'F') {\\n        *(pIp->ret) = pIp->c - 'A' + 10;\\n    } else {\\n        *(pIp->ret) = 0; // 非法字符，返回0\\n    }\\n    return;\\n}\\n\"\n}\n```"