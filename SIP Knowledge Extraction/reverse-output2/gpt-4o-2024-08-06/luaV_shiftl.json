"```json\n{\n  \"c_file\": \"#if !defined(__LUAV_SHIFTL_H__)\\n#define __LUAV_SHIFTL_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid luaV_shiftlFun(void *p);\\n\\n/* 实现对整数进行移位操作 */\\ntypedef struct __LuaVShiftl\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   lua_Integer x;   /* 需要进行移位操作的整数 */\\n   lua_Integer y;   /* 移位的位数，正数表示左移，负数表示右移 */\\n   /* 输出端口 */\\n   lua_Integer *ret; /* 移位操作的结果 */\\n   /* 输入输出端口 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} LuaVShiftl;\\n\\n#endif // __LUAV_SHIFTL_H__\\n\",\n  \"h_file\": \"#include \\\"LuaVShiftl.h\\\"\\n\\nvoid luaV_shiftlFun(void *p)\\n{\\n    LuaVShiftl *pIp = (LuaVShiftl*)p;\\n    if (pIp->y < 0) { /* 右移操作 */\\n        *(pIp->ret) = pIp->x >> (-pIp->y);\\n    } else { /* 左移操作 */\\n        *(pIp->ret) = pIp->x << pIp->y;\\n    }\\n    return;\\n}\"\n}\n```"