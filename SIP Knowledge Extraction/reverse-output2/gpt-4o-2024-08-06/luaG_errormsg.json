"```json\n{\n  \"c_file\": \"#if !defined(__LUAG_ERRORMSG_H__)\\n#define __LUAG_ERRORMSG_H__\\n\\n#include \\\"../../Lua.h\\\"\\n\\nvoid luaG_errormsgFun(void *p);\\n\\n/* Lua 错误处理相关结构 */\\ntypedef struct __luaG_errormsg\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入输出端口 */\\n   lua_State *L; /* Lua 状态结构体指针，包含当前的 Lua 运行状态信息 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} luaG_errormsg;\\n\\n#endif // __LUAG_ERRORMSG_H__\\n\",\n  \"h_file\": \"#include \\\"luaG_errormsg.h\\\"\\n\\nvoid luaG_errormsgFun(void *p)\\n{\\n    luaG_errormsg *pIp = (luaG_errormsg*)p;\\n\\n    if (pIp->L->errfunc != 0) /* 如果存在错误处理函数 */\\n    {\\n        lua_call(pIp->L, 0, 0); /* 调用错误处理函数 */\\n    }\\n    else\\n    {\\n        lua_error(pIp->L); /* 调用默认错误处理 */\\n    }\\n\\n    return;\\n}\\n\"\n}\n```"