"```json\n{\n  \"c_file\": \"#if !defined(__LUAG_ORDERERROR_H__)\\n#define __LUAG_ORDERERROR_H__\\n\\n#include \\\"../../Lua.h\\\"\\n\\nvoid luaG_ordererrorFun(void *p);\\n\\n/* Lua比较错误处理结构体 */\\ntypedef struct __luaG_ordererror\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入输出端口 */\\n   lua_State *L; /* Lua状态机指针，用于错误处理 */\\n   const TValue *p1; /* 第一个比较的Lua值 */\\n   const TValue *p2; /* 第二个比较的Lua值 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} luaG_ordererror;\\n\\n#endif // __LUAG_ORDERERROR_H__\\n\",\n  \"h_file\": \"#include \\\"luaG_ordererror.h\\\"\\n\\nvoid luaG_ordererrorFun(void *p)\\n{\\n    luaG_ordererror *pIp = (luaG_ordererror*)p;\\n    /* 处理Lua比较错误 */\\n    luaL_error(pIp->L, \\\"attempt to compare %s with %s\\\",\\n               lua_typename(pIp->L, lua_type(pIp->L, pIp->p1)),\\n               lua_typename(pIp->L, lua_type(pIp->L, pIp->p2)));\\n    return;\\n}\"\n}\n```"