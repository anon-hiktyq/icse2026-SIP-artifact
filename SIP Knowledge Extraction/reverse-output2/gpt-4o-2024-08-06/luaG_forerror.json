"```json\n{\n  \"c_file\": \"#if !defined(__LUAG_FORERROR_H__)\\n#define __LUAG_FORERROR_H__\\n\\n#include \\\"../../lua.h\\\"\\n\\nvoid luaG_forerrorFun(void *p);\\n\\n/* Lua 'for' loop error handling */\\ntypedef struct __luaG_forerror\\n{\\n   /* Interface function */\\n   Fun fun;\\n   /* Input/Output ports */\\n   lua_State *L; /* The current Lua state */\\n   const TValue *o; /* The object being checked in the 'for' loop */\\n   const char *what; /* Description of the expected type */\\n} luaG_forerror;\\n\\n#endif // __LUAG_FORERROR_H__\\n\",\n  \"h_file\": \"#include \\\"luaG_forerror.h\\\"\\n\\nvoid luaG_forerrorFun(void *p)\\n{\\n    luaG_forerror *pIp = (luaG_forerror*)p;\\n\\n    if (!ttisnumber(pIp->o)) /* Check if the object is a number */\\n    {\\n        luaG_runerror(pIp->L, \\\"for loop variable must be a number, got %s\\\", pIp->what);\\n    }\\n\\n    return;\\n}\"\n}\n```"