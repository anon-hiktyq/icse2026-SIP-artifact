"```json\n{\n  \"c_file\": \"#if !defined(__LTINTFLOAT_H__)\\n#define __LTINTFLOAT_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid LTintfloatFun(void *p);\\n\\n/* 比较整数和浮点数的大小 */\\ntypedef struct __LTintfloat\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   lua_Integer i; /* 要比较的整数 */\\n   lua_Number f;  /* 要比较的浮点数 */\\n   /* 输出端口 */\\n   int *ret; /* 比较结果的存储指针 */\\n   /* 输入输出端口 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} LTintfloat;\\n\\n#endif // __LTINTFLOAT_H__\\n\",\n  \"h_file\": \"#include \\\"LTintfloat.h\\\"\\n\\nvoid LTintfloatFun(void *p)\\n{\\n    LTintfloat *pIp = (LTintfloat*)p;\\n    if ((lua_Number)pIp->i < pIp->f)  /* 整数可以转换为浮点数直接比较 */\\n    {\\n        *(pIp->ret) = 1;\\n    }\\n    else\\n    {\\n        *(pIp->ret) = 0;\\n    }\\n    return;\\n}\"\n}\n```"