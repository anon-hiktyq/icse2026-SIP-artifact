"```json\n{\n  \"c_file\": \"#if !defined(__LEFLOATINT_H__)\\n#define __LEFLOATINT_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid LEfloatintFun(void *p);\\n\\n/* 比较浮点数和整数的大小关系 */\\ntypedef struct __LEfloatint\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   lua_Number f;   /* 待比较的浮点数 */\\n   lua_Integer i;  /* 待比较的整数 */\\n   /* 输出端口 */\\n   int *ret;       /* 比较结果指针 */\\n   /* 输入输出端口 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} LEfloatint;\\n\\n#endif // __LEFLOATINT_H__\\n\",\n  \"h_file\": \"#include \\\"LEfloatint.h\\\"\\n\\nvoid LEfloatintFun(void *p)\\n{\\n    LEfloatint *pIp = (LEfloatint*)p;\\n    if (pIp->f == (lua_Number)pIp->i) {\\n        *(pIp->ret) = 1;\\n    } else {\\n        lua_Integer ceil_f = (lua_Integer)(pIp->f + 0.5);\\n        *(pIp->ret) = (ceil_f <= pIp->i) ? 1 : 0;\\n    }\\n    return;\\n}\"\n}\n```"