"```json\n{\n  \"c_file\": \"#if !defined(__SAMSUBMODEROLL_H__)\\n#define __SAMSUBMODEROLL_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid SAMSubModeRollFun(SAMSubModeRoll *p);\\n\\n/* 根据输入的姿态数据和状态信息调整模式和控制参数 */\\ntypedef struct __SAMSubModeRoll\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   const SDSSData *pSDS; /* 输入的姿态数据指针 */\\n   unint32 countPublic;  /* 公共计数器 */\\n   unint32 countMode;    /* 模式计数器 */\\n   unint32 flgMode;      /* 模式标志 */\\n   /* 输出端口 */\\n   SDSSData mDSSData;    /* 输出的姿态数据 */\\n   /* 输入输出端口 */\\n   SController *pCtrl;   /* 控制参数指针 */\\n   unint16 flgPRSAM;     /* PRSAM标志 */\\n   SFWarning mFWarning;  /* 故障警告信息 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} SAMSubModeRoll;\\n\\n#endif // __SAMSUBMODEROLL_H__\\n\",\n  \"h_file\": \"#include \\\"SAMSubModeRoll.h\\\"\\n\\nvoid SAMSubModeRollFun(SAMSubModeRoll *p)\\n{\\n    // 处理输入的姿态数据和状态信息\\n    // 根据航向角和其他条件调整模式和控制参数\\n    // 可能触发模式切换和控制更新\\n\\n    return;\\n}\"\n}\n```"