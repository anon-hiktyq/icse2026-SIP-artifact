"```json\n{\n    \"c_file\": \"#if !defined(__CALCULATEGYRODG_H__)\\n#define __CALCULATEGYRODG_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid CalculateGyroDgFun(CalculateGyroDg *p);\\n\\n/* 计算陀螺角速度 */\\ntypedef struct __CalculateGyroDg\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入输出端口 */\\n   SGyroData *pGyroData; /* 指向包含陀螺数据的结构体的指针 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} CalculateGyroDg;\\n\\n#endif // __CALCULATEGYRODG_H__\\n\",\n    \"h_file\": \"#include \\\"CalculateGyroDg.h\\\"\\n\\nvoid CalculateGyroDgFun(CalculateGyroDg *p)\\n{\\n    SGyroData *pData = p->pGyroData;\\n    unint08 i;\\n    unint08 j;\\n    float32 gyroSpeed[3];\\n\\n    if (pData->JoinTotal >= 3) /* 若参加定姿的陀螺个数大于等于3 */\\n    {\\n        /* 调用矩阵乘法接口计算角速度 */\\n        MatrixMulti(&gyroSpeed[0], &pData->Rgtrans[0][0], &pData->Rgtemp[0][0], 3, 3, 1);\\n    }\\n    else\\n    {\\n        /* 将角速度置为零 */\\n        for (i = 0; i < 3; i++)\\n        {\\n            gyroSpeed[i] = 0.0f;\\n        }\\n    }\\n\\n    /* 更新陀螺数据结构体中的角速度 */\\n    for (i = 0; i < 3; i++)\\n    {\\n        pData->gyroSpeed[i] = gyroSpeed[i];\\n    }\\n\\n    return;\\n}\\n\"\n}\n```"