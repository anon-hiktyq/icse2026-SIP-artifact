"```json\n{\n  \"c_file\": \"#if !defined(__INITVAR_H__)\\n#define __INITVAR_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid InitVarFun(void *p);\\n\\n/* 初始化变量和标志位 */\\ntypedef struct __InitVar\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输出端口 */\\n   unint16 flg160INT;   /* 160INT标志位 */\\n   unint16 flgPRSAM;    /* PRSAM标志位 */\\n   unint16 gyroStatus0; /* 陀螺状态0 */\\n   unint16 gyroStatus1; /* 陀螺状态1 */\\n   unint32 countSate;   /* 卫星计数器 */\\n   unint32 countPublic; /* 公共计数器 */\\n   unint32 countMode;   /* 模式计数器 */\\n   unint08 countInt32ms; /* 32ms中断计数器 */\\n   unint32 countSPLost; /* SPLost计数器 */\\n   unint32 countSPSeen; /* SPSeen计数器 */\\n   unint32 countSPset;  /* SPset计数器 */\\n   unint32 countUPSpc;  /* UPSpc计数器 */\\n   unint32 wPulse;      /* 脉冲宽度 */\\n   float32 r0;          /* 调制器0的r值 */\\n   float32 r1;          /* 调制器1的r值 */\\n   float32 r2;          /* 调制器2的r值 */\\n   unint08 flgGryoCalc; /* 陀螺计算标志 */\\n} InitVar;\\n\\n#endif // __INITVAR_H__\\n\",\n  \"h_file\": \"#include \\\"InitVar.h\\\"\\n\\nvoid InitVarFun(void *p)\\n{\\n    InitVar *pIp = (InitVar*)p;\\n    pIp->flg160INT = 0;\\n    pIp->flgPRSAM = 0;\\n    pIp->gyroStatus0 = 0;\\n    pIp->gyroStatus1 = 0;\\n    pIp->countSate = 0;\\n    pIp->countPublic = 0;\\n    pIp->countMode = 0;\\n    pIp->countInt32ms = 0;\\n    pIp->countSPLost = 0;\\n    pIp->countSPSeen = 0;\\n    pIp->countSPset = 0;\\n    pIp->countUPSpc = 0;\\n    pIp->wPulse = 0;\\n    pIp->r0 = 0.0f;\\n    pIp->r1 = 0.0f;\\n    pIp->r2 = 0.0f;\\n    pIp->flgGryoCalc = 0;\\n    return;\\n}\\n\"\n}\n```"