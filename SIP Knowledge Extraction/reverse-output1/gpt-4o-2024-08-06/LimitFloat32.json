"```json\n{\n  \"c_file\": \"#if !defined(__LIMITFLOAT32_H__)\\n#define __LIMITFLOAT32_H__\\n\\n#include \\\"../../IP.h\\\"\\n\\nvoid LimitFloat32Fun(void *p);\\n\\n/* 限制输入浮点数在上下限之间 */\\ntypedef struct __LimitFloat32\\n{\\n   /* 接口函数 */\\n   Fun fun;\\n   /* 输入端口 */\\n   float32 fin;   /* 输入的浮点数 */\\n   float32 fbound; /* 浮点数的上下限 */\\n   /* 输出端口 */\\n   float32 fvalue; /* 限制后的浮点数值 */\\n   float32 *ret;   /* 指向存储结果的指针 */\\n   /* 输入输出端口 */\\n   /* 状态变量 */\\n   /* 参数变量 */\\n} LimitFloat32;\\n\\n#endif // __LIMITFLOAT32_H__\\n\",\n  \"h_file\": \"#include \\\"LimitFloat32.h\\\"\\n\\nvoid LimitFloat32Fun(void *p)\\n{\\n    LimitFloat32 *pIp = (LimitFloat32*)p;\\n    \\n    if (pIp->fin < -pIp->fbound) {\\n        pIp->fvalue = -pIp->fbound;\\n    } else if (pIp->fin > pIp->fbound) {\\n        pIp->fvalue = pIp->fbound;\\n    } else {\\n        pIp->fvalue = pIp->fin;\\n    }\\n    \\n    *(pIp->ret) = pIp->fvalue;\\n    return;\\n}\"\n}\n```"